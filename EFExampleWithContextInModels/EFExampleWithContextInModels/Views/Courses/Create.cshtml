@model EFExampleWithContextInModels.Models.Course

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    <div ng-controller="DemoCtrl" layout="column" layout-padding ng-cloak>

        <br />
        <md-content class="md-no-momentum">
            <md-input-container class="md-icon-float md-block">
                <!-- Use floating label instead of placeholder -->
                <label>Name</label>
                <md-icon md-svg-src="img/icons/ic_person_24px.svg" class="name"></md-icon>
                <input ng-model="user.name" type="text">
            </md-input-container>

            <md-input-container md-no-float class="md-block">
                <md-icon md-svg-src="img/icons/ic_phone_24px.svg"></md-icon>
                <input ng-model="user.phone" type="text" placeholder="Id" aria-label="Id">
            </md-input-container>

            <md-input-container class="md-block">
                <!-- Use floating placeholder instead of label -->
                <md-icon md-svg-src="img/icons/ic_email_24px.svg" class="email"></md-icon>
                <input ng-model="user.email" type="email" placeholder="Teacher Id (required)" ng-required="true"
                       aria-label="Teacher Id (required)">
            </md-input-container>

            <md-input-container md-no-float class="md-block">
                <input ng-model="user.address" type="text" placeholder="description" aria-label="description">
                <md-icon md-svg-src="img/icons/ic_place_24px.svg" style="display:inline-block;"></md-icon>
            </md-input-container>

           

        </md-content>

    </div>

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "TeacherId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TeacherId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CoursesCreate")
    @Styles.Render("~/Content/CorsesCreate")

}
